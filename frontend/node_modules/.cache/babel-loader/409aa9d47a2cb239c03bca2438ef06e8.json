{"ast":null,"code":"import React,{useState}from\"react\";import\"./App.css\";const App=()=>{const[sessionId,setSessionId]=useState(\"\");const sendMessageToContent=(action,timestamp)=>{chrome.tabs.query({active:true,currentWindow:true},tabs=>{chrome.tabs.sendMessage(tabs[0].id||0,{type:\"CONTROL_VIDEO\",action,timestamp});});};const handleConnect=()=>{chrome.runtime.sendMessage({type:\"CONNECT_SOCKET\"},response=>{if(response.success)console.log(\"WebSocket connection initiated!\");});};const handlePlay=()=>sendMessageToContent(\"PLAY\");const handlePause=()=>sendMessageToContent(\"PAUSE\");const handleSync=()=>{// Example timestamp; replace with actual logic to sync timestamps\nconst timestamp=30;// Assume 30 seconds as an example\nsendMessageToContent(\"SYNC\",timestamp);};return/*#__PURE__*/React.createElement(\"div\",{className:\"syncwatch-container\"},/*#__PURE__*/React.createElement(\"header\",{className:\"syncwatch-header\"},/*#__PURE__*/React.createElement(\"h1\",null,\"SyncWatch\")),/*#__PURE__*/React.createElement(\"main\",{className:\"syncwatch-main\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn\",onClick:handleConnect},\"Connect to Server\"),/*#__PURE__*/React.createElement(\"div\",{className:\"playback-controls\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-play\",onClick:handlePlay},\"\\u25B6\\uFE0F Play\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-pause\",onClick:handlePause},\"\\u23F8 Pause\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sync\",onClick:handleSync},\"\\uD83D\\uDD04 Sync\"))));};export default App;","map":{"version":3,"names":["React","useState","App","sessionId","setSessionId","sendMessageToContent","action","timestamp","chrome","tabs","query","active","currentWindow","sendMessage","id","type","handleConnect","runtime","response","success","console","log","handlePlay","handlePause","handleSync","createElement","className","onClick"],"sources":["C:/Desktop/SyncWatch/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { VideoControlAction, ControlMessage } from \"./types\";\nimport \"./App.css\";\n\nconst App: React.FC = () => {\n  const [sessionId, setSessionId] = useState<string>(\"\");\n\n  const sendMessageToContent = (action: string, timestamp?: number) => {\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      chrome.tabs.sendMessage(tabs[0].id || 0, { type: \"CONTROL_VIDEO\", action, timestamp });\n    });\n  };\n\n  const handleConnect = () => {\n    chrome.runtime.sendMessage({ type: \"CONNECT_SOCKET\" }, (response) => {\n      if (response.success) console.log(\"WebSocket connection initiated!\");\n    });\n  };\n\n  const handlePlay = () => sendMessageToContent(\"PLAY\");\n  const handlePause = () => sendMessageToContent(\"PAUSE\");\n  const handleSync = () => {\n    // Example timestamp; replace with actual logic to sync timestamps\n    const timestamp = 30; // Assume 30 seconds as an example\n    sendMessageToContent(\"SYNC\", timestamp);\n  };\n\n  return (\n    <div className=\"syncwatch-container\">\n      <header className=\"syncwatch-header\">\n        <h1>SyncWatch</h1>\n      </header>\n      <main className=\"syncwatch-main\">\n        <button className=\"btn\" onClick={handleConnect}>\n          Connect to Server\n        </button>\n        <div className=\"playback-controls\">\n          <button className=\"btn btn-play\" onClick={handlePlay}>\n            ‚ñ∂Ô∏è Play\n          </button>\n          <button className=\"btn btn-pause\" onClick={handlePause}>\n            ‚è∏ Pause\n          </button>\n          <button className=\"btn btn-sync\" onClick={handleSync}>\n            üîÑ Sync\n          </button>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAEvC,MAAO,WAAW,CAElB,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGH,QAAQ,CAAS,EAAE,CAAC,CAEtD,KAAM,CAAAI,oBAAoB,CAAGA,CAACC,MAAc,CAAEC,SAAkB,GAAK,CACnEC,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC,CAAEC,MAAM,CAAE,IAAI,CAAEC,aAAa,CAAE,IAAK,CAAC,CAAGH,IAAI,EAAK,CACjED,MAAM,CAACC,IAAI,CAACI,WAAW,CAACJ,IAAI,CAAC,CAAC,CAAC,CAACK,EAAE,EAAI,CAAC,CAAE,CAAEC,IAAI,CAAE,eAAe,CAAET,MAAM,CAAEC,SAAU,CAAC,CAAC,CACxF,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAS,aAAa,CAAGA,CAAA,GAAM,CAC1BR,MAAM,CAACS,OAAO,CAACJ,WAAW,CAAC,CAAEE,IAAI,CAAE,gBAAiB,CAAC,CAAGG,QAAQ,EAAK,CACnE,GAAIA,QAAQ,CAACC,OAAO,CAAEC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CACtE,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAMjB,oBAAoB,CAAC,MAAM,CAAC,CACrD,KAAM,CAAAkB,WAAW,CAAGA,CAAA,GAAMlB,oBAAoB,CAAC,OAAO,CAAC,CACvD,KAAM,CAAAmB,UAAU,CAAGA,CAAA,GAAM,CACvB;AACA,KAAM,CAAAjB,SAAS,CAAG,EAAE,CAAE;AACtBF,oBAAoB,CAAC,MAAM,CAAEE,SAAS,CAAC,CACzC,CAAC,CAED,mBACEP,KAAA,CAAAyB,aAAA,QAAKC,SAAS,CAAC,qBAAqB,eAClC1B,KAAA,CAAAyB,aAAA,WAAQC,SAAS,CAAC,kBAAkB,eAClC1B,KAAA,CAAAyB,aAAA,WAAI,WAAa,CACX,CAAC,cACTzB,KAAA,CAAAyB,aAAA,SAAMC,SAAS,CAAC,gBAAgB,eAC9B1B,KAAA,CAAAyB,aAAA,WAAQC,SAAS,CAAC,KAAK,CAACC,OAAO,CAAEX,aAAc,EAAC,mBAExC,CAAC,cACThB,KAAA,CAAAyB,aAAA,QAAKC,SAAS,CAAC,mBAAmB,eAChC1B,KAAA,CAAAyB,aAAA,WAAQC,SAAS,CAAC,cAAc,CAACC,OAAO,CAAEL,UAAW,EAAC,mBAE9C,CAAC,cACTtB,KAAA,CAAAyB,aAAA,WAAQC,SAAS,CAAC,eAAe,CAACC,OAAO,CAAEJ,WAAY,EAAC,cAEhD,CAAC,cACTvB,KAAA,CAAAyB,aAAA,WAAQC,SAAS,CAAC,cAAc,CAACC,OAAO,CAAEH,UAAW,EAAC,mBAE9C,CACL,CACD,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAtB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}